/*
 ██████╗ ███╗   ██╗███████╗
██╔═══██╗████╗  ██║██╔════╝
██║   ██║██╔██╗ ██║█████╗  
██║   ██║██║╚██╗██║██╔══╝  
╚██████╔╝██║ ╚████║███████╗
 ╚═════╝ ╚═╝  ╚═══╝╚══════╝
===
Your Style. Simple. Succint.
===
Version: 1.0.0
Author: Tony O'Connell
tony@one.ie
http://one.ie

ONE
=====
“Art is the elimination of the unnecessary.”
― Pablo Picasso

Follow a concise, easy way to converse with your customers, staff and friends in style.  
Design elegant web and mobile experiences quickly. 

1. Define your colours
2. Add your logo
3. Design your type
4. Layout screens - text first, progresively enhancing to large, high definition displays 
5. Display media - pages, pictures, animation and video. 

/*
Colors 
=========
*/
/*
Patterns
========
*/
/*
Logo 
=========
*/
.logo-text {
  font-size: 40px;
}
logo {
  padding: 2px 5px;
}
logo img {
  padding: 5px;
  border: 0;
}
/*
Type 
====
*/
p {
  line-height: 150%;
}
.tiny {
  font-size: 10px;
}
html,
body {
  font-family: mco;
  color: #111;
  font-size: 16px;
tablet()
desktop()
}
p {
  margin: 10px 0;
tablet()
desktop()
}
h4 {
  font-size: 110%;
  margin: 10px 0;
}
h3 {
  font-size: 120%;
  margin: 10px 0;
}
h2 {
  font-size: 130%;
  margin: 10px 0;
}
h1 {
  font-size: 180%;
  margin: 10px 0;
}
a {
  color: #111;
  font-weight: bold;
  text-decoration: none;
}
a:hover {
  color: #daa520;
}
@font-face {
  font-family: mco;
  src: url("../fonts/mco.eot?#iefix") format('embedded-opentype'), url("../fonts/mco.woff") format('woff'), url("../fonts/mco.ttf") format('truetype'), url("../fonts/mco.eot#svgFontName") format('svg');
  font-weight: normal;
  font-style: normal;
}
/*# sourceMappingURL=data:application/json;base64, */